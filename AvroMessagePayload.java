/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.visa.cosmo.kafka.client.model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AvroMessagePayload extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4921783156194380690L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroMessagePayload\",\"namespace\":\"com.visa.cosmo.kafka.client.model\",\"fields\":[{\"name\":\"processorName\",\"type\":\"string\"},{\"name\":\"transactionDate\",\"type\":\"string\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"typeCode\",\"type\":\"string\"},{\"name\":\"paymentSubType\",\"type\":\"string\"},{\"name\":\"secCode\",\"type\":\"string\"},{\"name\":\"companyName\",\"type\":\"string\"},{\"name\":\"companyDescription\",\"type\":\"string\"},{\"name\":\"encryptionKey\",\"type\":\"string\"},{\"name\":\"payload\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence processorName;
  @Deprecated public java.lang.CharSequence transactionDate;
  @Deprecated public java.lang.CharSequence currency;
  @Deprecated public java.lang.CharSequence typeCode;
  @Deprecated public java.lang.CharSequence paymentSubType;
  @Deprecated public java.lang.CharSequence secCode;
  @Deprecated public java.lang.CharSequence companyName;
  @Deprecated public java.lang.CharSequence companyDescription;
  @Deprecated public java.lang.CharSequence encryptionKey;
  @Deprecated public java.lang.CharSequence payload;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AvroMessagePayload() {}

  /**
   * All-args constructor.
   * @param processorName The new value for processorName
   * @param transactionDate The new value for transactionDate
   * @param currency The new value for currency
   * @param typeCode The new value for typeCode
   * @param paymentSubType The new value for paymentSubType
   * @param secCode The new value for secCode
   * @param companyName The new value for companyName
   * @param companyDescription The new value for companyDescription
   * @param encryptionKey The new value for encryptionKey
   * @param payload The new value for payload
   */
  public AvroMessagePayload(java.lang.CharSequence processorName, java.lang.CharSequence transactionDate, java.lang.CharSequence currency, java.lang.CharSequence typeCode, java.lang.CharSequence paymentSubType, java.lang.CharSequence secCode, java.lang.CharSequence companyName, java.lang.CharSequence companyDescription, java.lang.CharSequence encryptionKey, java.lang.CharSequence payload) {
    this.processorName = processorName;
    this.transactionDate = transactionDate;
    this.currency = currency;
    this.typeCode = typeCode;
    this.paymentSubType = paymentSubType;
    this.secCode = secCode;
    this.companyName = companyName;
    this.companyDescription = companyDescription;
    this.encryptionKey = encryptionKey;
    this.payload = payload;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return processorName;
    case 1: return transactionDate;
    case 2: return currency;
    case 3: return typeCode;
    case 4: return paymentSubType;
    case 5: return secCode;
    case 6: return companyName;
    case 7: return companyDescription;
    case 8: return encryptionKey;
    case 9: return payload;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: processorName = (java.lang.CharSequence)value$; break;
    case 1: transactionDate = (java.lang.CharSequence)value$; break;
    case 2: currency = (java.lang.CharSequence)value$; break;
    case 3: typeCode = (java.lang.CharSequence)value$; break;
    case 4: paymentSubType = (java.lang.CharSequence)value$; break;
    case 5: secCode = (java.lang.CharSequence)value$; break;
    case 6: companyName = (java.lang.CharSequence)value$; break;
    case 7: companyDescription = (java.lang.CharSequence)value$; break;
    case 8: encryptionKey = (java.lang.CharSequence)value$; break;
    case 9: payload = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'processorName' field.
   * @return The value of the 'processorName' field.
   */
  public java.lang.CharSequence getProcessorName() {
    return processorName;
  }

  /**
   * Sets the value of the 'processorName' field.
   * @param value the value to set.
   */
  public void setProcessorName(java.lang.CharSequence value) {
    this.processorName = value;
  }

  /**
   * Gets the value of the 'transactionDate' field.
   * @return The value of the 'transactionDate' field.
   */
  public java.lang.CharSequence getTransactionDate() {
    return transactionDate;
  }

  /**
   * Sets the value of the 'transactionDate' field.
   * @param value the value to set.
   */
  public void setTransactionDate(java.lang.CharSequence value) {
    this.transactionDate = value;
  }

  /**
   * Gets the value of the 'currency' field.
   * @return The value of the 'currency' field.
   */
  public java.lang.CharSequence getCurrency() {
    return currency;
  }

  /**
   * Sets the value of the 'currency' field.
   * @param value the value to set.
   */
  public void setCurrency(java.lang.CharSequence value) {
    this.currency = value;
  }

  /**
   * Gets the value of the 'typeCode' field.
   * @return The value of the 'typeCode' field.
   */
  public java.lang.CharSequence getTypeCode() {
    return typeCode;
  }

  /**
   * Sets the value of the 'typeCode' field.
   * @param value the value to set.
   */
  public void setTypeCode(java.lang.CharSequence value) {
    this.typeCode = value;
  }

  /**
   * Gets the value of the 'paymentSubType' field.
   * @return The value of the 'paymentSubType' field.
   */
  public java.lang.CharSequence getPaymentSubType() {
    return paymentSubType;
  }

  /**
   * Sets the value of the 'paymentSubType' field.
   * @param value the value to set.
   */
  public void setPaymentSubType(java.lang.CharSequence value) {
    this.paymentSubType = value;
  }

  /**
   * Gets the value of the 'secCode' field.
   * @return The value of the 'secCode' field.
   */
  public java.lang.CharSequence getSecCode() {
    return secCode;
  }

  /**
   * Sets the value of the 'secCode' field.
   * @param value the value to set.
   */
  public void setSecCode(java.lang.CharSequence value) {
    this.secCode = value;
  }

  /**
   * Gets the value of the 'companyName' field.
   * @return The value of the 'companyName' field.
   */
  public java.lang.CharSequence getCompanyName() {
    return companyName;
  }

  /**
   * Sets the value of the 'companyName' field.
   * @param value the value to set.
   */
  public void setCompanyName(java.lang.CharSequence value) {
    this.companyName = value;
  }

  /**
   * Gets the value of the 'companyDescription' field.
   * @return The value of the 'companyDescription' field.
   */
  public java.lang.CharSequence getCompanyDescription() {
    return companyDescription;
  }

  /**
   * Sets the value of the 'companyDescription' field.
   * @param value the value to set.
   */
  public void setCompanyDescription(java.lang.CharSequence value) {
    this.companyDescription = value;
  }

  /**
   * Gets the value of the 'encryptionKey' field.
   * @return The value of the 'encryptionKey' field.
   */
  public java.lang.CharSequence getEncryptionKey() {
    return encryptionKey;
  }

  /**
   * Sets the value of the 'encryptionKey' field.
   * @param value the value to set.
   */
  public void setEncryptionKey(java.lang.CharSequence value) {
    this.encryptionKey = value;
  }

  /**
   * Gets the value of the 'payload' field.
   * @return The value of the 'payload' field.
   */
  public java.lang.CharSequence getPayload() {
    return payload;
  }

  /**
   * Sets the value of the 'payload' field.
   * @param value the value to set.
   */
  public void setPayload(java.lang.CharSequence value) {
    this.payload = value;
  }

  /**
   * Creates a new AvroMessagePayload RecordBuilder.
   * @return A new AvroMessagePayload RecordBuilder
   */
  public static com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder newBuilder() {
    return new com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder();
  }

  /**
   * Creates a new AvroMessagePayload RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AvroMessagePayload RecordBuilder
   */
  public static com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder newBuilder(com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder other) {
    return new com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder(other);
  }

  /**
   * Creates a new AvroMessagePayload RecordBuilder by copying an existing AvroMessagePayload instance.
   * @param other The existing instance to copy.
   * @return A new AvroMessagePayload RecordBuilder
   */
  public static com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder newBuilder(com.visa.cosmo.kafka.client.model.AvroMessagePayload other) {
    return new com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder(other);
  }

  /**
   * RecordBuilder for AvroMessagePayload instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroMessagePayload>
    implements org.apache.avro.data.RecordBuilder<AvroMessagePayload> {

    private java.lang.CharSequence processorName;
    private java.lang.CharSequence transactionDate;
    private java.lang.CharSequence currency;
    private java.lang.CharSequence typeCode;
    private java.lang.CharSequence paymentSubType;
    private java.lang.CharSequence secCode;
    private java.lang.CharSequence companyName;
    private java.lang.CharSequence companyDescription;
    private java.lang.CharSequence encryptionKey;
    private java.lang.CharSequence payload;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.processorName)) {
        this.processorName = data().deepCopy(fields()[0].schema(), other.processorName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.transactionDate)) {
        this.transactionDate = data().deepCopy(fields()[1].schema(), other.transactionDate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.currency)) {
        this.currency = data().deepCopy(fields()[2].schema(), other.currency);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.typeCode)) {
        this.typeCode = data().deepCopy(fields()[3].schema(), other.typeCode);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.paymentSubType)) {
        this.paymentSubType = data().deepCopy(fields()[4].schema(), other.paymentSubType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.secCode)) {
        this.secCode = data().deepCopy(fields()[5].schema(), other.secCode);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.companyName)) {
        this.companyName = data().deepCopy(fields()[6].schema(), other.companyName);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.companyDescription)) {
        this.companyDescription = data().deepCopy(fields()[7].schema(), other.companyDescription);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.encryptionKey)) {
        this.encryptionKey = data().deepCopy(fields()[8].schema(), other.encryptionKey);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.payload)) {
        this.payload = data().deepCopy(fields()[9].schema(), other.payload);
        fieldSetFlags()[9] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing AvroMessagePayload instance
     * @param other The existing instance to copy.
     */
    private Builder(com.visa.cosmo.kafka.client.model.AvroMessagePayload other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.processorName)) {
        this.processorName = data().deepCopy(fields()[0].schema(), other.processorName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.transactionDate)) {
        this.transactionDate = data().deepCopy(fields()[1].schema(), other.transactionDate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.currency)) {
        this.currency = data().deepCopy(fields()[2].schema(), other.currency);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.typeCode)) {
        this.typeCode = data().deepCopy(fields()[3].schema(), other.typeCode);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.paymentSubType)) {
        this.paymentSubType = data().deepCopy(fields()[4].schema(), other.paymentSubType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.secCode)) {
        this.secCode = data().deepCopy(fields()[5].schema(), other.secCode);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.companyName)) {
        this.companyName = data().deepCopy(fields()[6].schema(), other.companyName);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.companyDescription)) {
        this.companyDescription = data().deepCopy(fields()[7].schema(), other.companyDescription);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.encryptionKey)) {
        this.encryptionKey = data().deepCopy(fields()[8].schema(), other.encryptionKey);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.payload)) {
        this.payload = data().deepCopy(fields()[9].schema(), other.payload);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'processorName' field.
      * @return The value.
      */
    public java.lang.CharSequence getProcessorName() {
      return processorName;
    }

    /**
      * Sets the value of the 'processorName' field.
      * @param value The value of 'processorName'.
      * @return This builder.
      */
    public com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder setProcessorName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.processorName = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'processorName' field has been set.
      * @return True if the 'processorName' field has been set, false otherwise.
      */
    public boolean hasProcessorName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'processorName' field.
      * @return This builder.
      */
    public com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder clearProcessorName() {
      processorName = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'transactionDate' field.
      * @return The value.
      */
    public java.lang.CharSequence getTransactionDate() {
      return transactionDate;
    }

    /**
      * Sets the value of the 'transactionDate' field.
      * @param value The value of 'transactionDate'.
      * @return This builder.
      */
    public com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder setTransactionDate(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.transactionDate = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'transactionDate' field has been set.
      * @return True if the 'transactionDate' field has been set, false otherwise.
      */
    public boolean hasTransactionDate() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'transactionDate' field.
      * @return This builder.
      */
    public com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder clearTransactionDate() {
      transactionDate = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'currency' field.
      * @return The value.
      */
    public java.lang.CharSequence getCurrency() {
      return currency;
    }

    /**
      * Sets the value of the 'currency' field.
      * @param value The value of 'currency'.
      * @return This builder.
      */
    public com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder setCurrency(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.currency = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'currency' field has been set.
      * @return True if the 'currency' field has been set, false otherwise.
      */
    public boolean hasCurrency() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'currency' field.
      * @return This builder.
      */
    public com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder clearCurrency() {
      currency = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'typeCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getTypeCode() {
      return typeCode;
    }

    /**
      * Sets the value of the 'typeCode' field.
      * @param value The value of 'typeCode'.
      * @return This builder.
      */
    public com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder setTypeCode(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.typeCode = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'typeCode' field has been set.
      * @return True if the 'typeCode' field has been set, false otherwise.
      */
    public boolean hasTypeCode() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'typeCode' field.
      * @return This builder.
      */
    public com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder clearTypeCode() {
      typeCode = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'paymentSubType' field.
      * @return The value.
      */
    public java.lang.CharSequence getPaymentSubType() {
      return paymentSubType;
    }

    /**
      * Sets the value of the 'paymentSubType' field.
      * @param value The value of 'paymentSubType'.
      * @return This builder.
      */
    public com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder setPaymentSubType(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.paymentSubType = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'paymentSubType' field has been set.
      * @return True if the 'paymentSubType' field has been set, false otherwise.
      */
    public boolean hasPaymentSubType() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'paymentSubType' field.
      * @return This builder.
      */
    public com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder clearPaymentSubType() {
      paymentSubType = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'secCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getSecCode() {
      return secCode;
    }

    /**
      * Sets the value of the 'secCode' field.
      * @param value The value of 'secCode'.
      * @return This builder.
      */
    public com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder setSecCode(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.secCode = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'secCode' field has been set.
      * @return True if the 'secCode' field has been set, false otherwise.
      */
    public boolean hasSecCode() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'secCode' field.
      * @return This builder.
      */
    public com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder clearSecCode() {
      secCode = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'companyName' field.
      * @return The value.
      */
    public java.lang.CharSequence getCompanyName() {
      return companyName;
    }

    /**
      * Sets the value of the 'companyName' field.
      * @param value The value of 'companyName'.
      * @return This builder.
      */
    public com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder setCompanyName(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.companyName = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'companyName' field has been set.
      * @return True if the 'companyName' field has been set, false otherwise.
      */
    public boolean hasCompanyName() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'companyName' field.
      * @return This builder.
      */
    public com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder clearCompanyName() {
      companyName = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'companyDescription' field.
      * @return The value.
      */
    public java.lang.CharSequence getCompanyDescription() {
      return companyDescription;
    }

    /**
      * Sets the value of the 'companyDescription' field.
      * @param value The value of 'companyDescription'.
      * @return This builder.
      */
    public com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder setCompanyDescription(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.companyDescription = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'companyDescription' field has been set.
      * @return True if the 'companyDescription' field has been set, false otherwise.
      */
    public boolean hasCompanyDescription() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'companyDescription' field.
      * @return This builder.
      */
    public com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder clearCompanyDescription() {
      companyDescription = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'encryptionKey' field.
      * @return The value.
      */
    public java.lang.CharSequence getEncryptionKey() {
      return encryptionKey;
    }

    /**
      * Sets the value of the 'encryptionKey' field.
      * @param value The value of 'encryptionKey'.
      * @return This builder.
      */
    public com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder setEncryptionKey(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.encryptionKey = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'encryptionKey' field has been set.
      * @return True if the 'encryptionKey' field has been set, false otherwise.
      */
    public boolean hasEncryptionKey() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'encryptionKey' field.
      * @return This builder.
      */
    public com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder clearEncryptionKey() {
      encryptionKey = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'payload' field.
      * @return The value.
      */
    public java.lang.CharSequence getPayload() {
      return payload;
    }

    /**
      * Sets the value of the 'payload' field.
      * @param value The value of 'payload'.
      * @return This builder.
      */
    public com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder setPayload(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.payload = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'payload' field has been set.
      * @return True if the 'payload' field has been set, false otherwise.
      */
    public boolean hasPayload() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'payload' field.
      * @return This builder.
      */
    public com.visa.cosmo.kafka.client.model.AvroMessagePayload.Builder clearPayload() {
      payload = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    public AvroMessagePayload build() {
      try {
        AvroMessagePayload record = new AvroMessagePayload();
        record.processorName = fieldSetFlags()[0] ? this.processorName : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.transactionDate = fieldSetFlags()[1] ? this.transactionDate : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.currency = fieldSetFlags()[2] ? this.currency : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.typeCode = fieldSetFlags()[3] ? this.typeCode : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.paymentSubType = fieldSetFlags()[4] ? this.paymentSubType : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.secCode = fieldSetFlags()[5] ? this.secCode : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.companyName = fieldSetFlags()[6] ? this.companyName : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.companyDescription = fieldSetFlags()[7] ? this.companyDescription : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.encryptionKey = fieldSetFlags()[8] ? this.encryptionKey : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.payload = fieldSetFlags()[9] ? this.payload : (java.lang.CharSequence) defaultValue(fields()[9]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
